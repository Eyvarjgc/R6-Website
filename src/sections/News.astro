---
import Title from "../components/Title.astro"
import InfoNews from '../components/News/InfoNews.astro'
import { getCollection } from "astro:content"
  import data from '../data/news.json'



var NewID = 'New1.md'

const newToShow = await getCollection('News', (data) => {
  return data.id == NewID
})


const allNews = await getCollection('News')


const filteredNews = allNews.filter((item) => {
  return item.id != NewID
})


const otherNewsData = filteredNews.map((item) => {
  return item
})

const otherNewsDataTitle = otherNewsData.map((item) => {
  return {
    title: item.data.title,
    id: item.id
  }
})


---

<section class="News z-10 relative" id="News">

  <div class=" lg:text-6xl  lg:skew-y-[10deg] lg:pt-24 lg:w-fit sm:px-0 md:px-44">
    <Title title="Ultimas noticias" />
    
  </div>

  <div class="px-12 lg:flex lg:flex-col lg:gap-8"> 
    {newToShow.map((element) => {
      const {data} = element
      const {title, date,description,link} = data

      
      return  <InfoNews 
    title={title}
    date={date}
    description={description}
    link={link}
   />


    })}

<div class="inline-flex gap-4 items-center justify-center my-4 flex-col w-full lg:flex-row lg:my-24 lg:text-base">

  {otherNewsDataTitle.map((data,index) => {
    
    return <button class="buttonNews bg-black border-yellow-200 border-2 border-opacity-20 w-full news relative" set-news={data.title}  >{data.title}</button>
  })}


</div>

</div>
<a href='https://www.ubisoft.com/es-mx/game/rainbow-six/siege/news-updates' class="bg-cyan-800  px-4 py-1   text-black text-xl md:text-3xl info relative" target="_blank">Todas las noticias</a>
</section>


<script>
  import data from '../data/news.json'

  
  const button = document.querySelectorAll('.buttonNews')
  const mainNew = document.querySelector('.MainNew')

function changeNew(id){
  console.log(`Clicked on item with ID: ${id}`);
}

button.forEach(element => {
  element.addEventListener('click', (_) => {
  const changeNew = _.target.attributes[1].value
  console.log(changeNew);
  
  const filteredData = data.filter((item,index) => {
    return item.title == changeNew
  })

  const dataHtml = filteredData.map((item) => {
    
    return ` <img src="/img/news/${item.title}.webp" alt="" class="border-yellow-300 border rounded-sm relative lg:w-[40%] lg:h-[300px] lg:skew-y-[10deg] lg:my-8">

  <div class="lg:text-start lg:pl-12 lg:w-[40%]" >


      <h1 class="text-3xl lg:text-5xl my-4 lg:tracking-wider
      text-cyan-400">${item.title}</h1> 
      <p class="bg-black text-2xl  tracking-wide   flex mx-auto my-0 " style="border-bottom-right-radius: 35px;">${item.date}</p>
      <p class="text-xl tracking-tight font-mono my-2">${item.description}</p>
    <a href=${item.link} class="bg-cyan-800  px-4 py-1 text-black text-2xl info relative"  target="_blank">Mas info</a>
    
 
  </div>`
  }).join(' ')
  
  mainNew.innerHTML = dataHtml

})
  
});



</script>


<style>


.news::before{
    content: '';
    position: absolute;
    bottom: 0;
    right: 0;
    transition: all 0.4s ease;
    width: 4px;
    height: 100%;
  }
  .news::after{
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    transition: all 0.4s ease;
    width: 5%;
    height: 100%;
  }
  .news:hover:after{
    background-color: rgba(255, 255, 0, 0.16);
    width: 100%;
    color: black;
  }
  .news:hover:before{
    background-color: rgba(255, 255, 0, 0.16);
    width: 100%;
    color: black;
  } 

  .info::after{
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 10%;
    background:linear-gradient(360deg, rgba(0, 255, 255, 0.963), rgba(0, 0, 0, 0.107)  50%) ;

    transition: all 0.3s ease;
  }
  .info:hover:after{
    height: 100%;
  }

</style>
